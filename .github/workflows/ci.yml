name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura o Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Constrói a imagem Docker
      - name: Build Docker image
        run: docker build -t minha-aplicacao-python .

      # 4. Executa testes dentro do contêiner
      - name: Run tests
        run: docker run minha-aplicacao-python python -m pytest

  deploy-to-render:
    needs: build-and-test  # Depende do job build-and-test
    runs-on: ubuntu-latest

    steps:
      # 1. Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Instala o Render CLI
      - name: Install Render CLI
        run: |
          curl -fsSL https://cli.render.com/install.sh | bash

      # 3. Faz login no Render
      - name: Log in to Render
        run: |
          render login --api-key ${{ secrets.RENDER_API_KEY }}

      # 4. Faz o deploy no Render
      - name: Deploy to Render
        run: |
          render services create \
            --name minha-aplicacao-python \
            --type web \
            --dockerfile Dockerfile \
            --env PORT=8080 \
            --env PYTHON_VERSION=3.9 \
            --region us-east-1 \
            --plan free
          
        # 5. Exibe o link da aplicação no Render
      - name: Show app URL
        run: |
          echo "Aplicação implantada com sucesso!"
          echo "Acesse: implementacao.onrender.com"  