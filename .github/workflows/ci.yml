name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura o Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Faz login no Docker Hub (ou outro registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 4. Constrói a imagem Docker
      - name: Build Docker image
        run: docker build -t implementacao .

      # 5. Executa testes dentro do contêiner
      - name: Run tests
        run: docker run implementacao python -m pytest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # 1. Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura o Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Faz login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 4. Constrói e envia a imagem Docker para o Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/implementacao:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/implementacao:latest